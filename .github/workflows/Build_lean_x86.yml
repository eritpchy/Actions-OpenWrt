name: Build lean x86

on: 
  schedule:
    # 对应的是 UTC 时间，需要转换，0 代表北京时间8点
    - cron: 20 1 2,18 * *
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  REPO_BRANCH: master
  FEEDS_CONF: lean.feeds.conf.default
  CONFIG_FILE: lean.x86.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        ulimit -a

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 512
        temp-reserve-mb: 1024
        root-reserve-mb: 2048
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'

    - name: Checkout
      uses: actions/checkout@main

    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Start SSH via tmate
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      uses: P3TERX/ssh2actions@main
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}   

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      if: (!cancelled())
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rm -rf *.buildinfo
        rm -rf sha256sums
        rm -rf *.manifest
        rm -rf *.itb
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "TAG_NAME=$(date +"%Y.%m.%d-${CONFIG_FILE%%.*}-$(echo $CONFIG_FILE | cut -d "." -f2)")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      if: steps.organize.outputs.status == 'success' && !cancelled()
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to release
      if: (!cancelled())
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.TAG_NAME }}
        allowUpdates: true
        tag: ${{ env.TAG_NAME }}
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      if: (!cancelled())
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      if: (!cancelled())
      uses: dev-drprasad/delete-older-releases@v0.3.3
      with:
        keep_latest: 99
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
